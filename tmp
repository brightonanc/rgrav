
            Z1 = U_arr @ (U_arr.mT @ U0)
            Z1_mixed = self._fast_mix(Z1)
            prev_U1 = U0
            U1 = util.get_orthobasis(Z1_mixed, mode=self.mode)

            Z2 = Z1 + (U_arr @ (U_arr.mT @ (U1 - U0)))
            Z2_mixed = self._fast_mix(Z2)
            U2 = util.get_orthobasis(
				self._fast_mix(
					(U_arr @ (U_arr.mT @ U0)) + (U_arr @ (U_arr.mT @ (util.get_orthobasis(
						self._fast_mix(U_arr @ (U_arr.mT @ U0)),
					mode=self.mode) - U0)))
				),
			mode=self.mode)

            Z3 = Z2 + (U_arr @ (U_arr.mT @ (U2 - U1)))
            Z3_mixed = self._fast_mix(Z3)
            U3 = util.get_orthobasis(Z3_mixed, mode=self.mode)

            Z += (U_arr @ (U_arr.mT @ (U - prev_U)))
            Z_mixed = self._fast_mix(Z)
            U = util.get_orthobasis(Z_mixed, mode=self.mode)


        S0 = U0
        AU0 = U0

            tmp1 = U_arr @ (U_arr.mT @ U0)
            S1 = S0 + tmp1 - AU0
            AU1 = tmp1
            S1_mixed = self._fast_mix(S1)
            U1 = torch.linalg.qr(S1_mixed).Q

            tmp2 = U_arr @ (U_arr.mT @ U1)
            S2 = S1_mixed + tmp2 - AU1
            AU2 = tmp2
            S2_mixed = self._fast_mix(S2)
            U2 = torch.linalg.qr(
				self._fast_mix(
					self._fast_mix(U0 + (U_arr @ (U_arr.mT @ U0)) - U0) + (U_arr @ (U_arr.mT @ torch.linalg.qr(
						self._fast_mix(U0 + (U_arr @ (U_arr.mT @ U0)) - U0)
					).Q)) - (U_arr @ (U_arr.mT @ U0))
				)
			).Q

            tmp3 = U_arr @ (U_arr.mT @ U2)
            S3 = S2_mixed + tmp3 - AU2
            AU3 = tmp3
            S3_mixed = self._fast_mix(S3)
            U3 = torch.linalg.qr(S3_mixed).Q

            tmp = U_arr @ (U_arr.mT @ U)
            S = S + tmp - AU
            AU = tmp
            S = self._fast_mix(S)
            U = torch.linalg.qr(S).Q







            U2 = util.get_orthobasis(
				self._fast_mix(
					(U_arr @ (U_arr.mT @ U0)) + (U_arr @ (U_arr.mT @ (util.get_orthobasis(
						self._fast_mix(U_arr @ (U_arr.mT @ U0)),
					mode=self.mode) - U0)))
				),
			mode=self.mode)


            U2 = torch.linalg.qr(
				self._fast_mix(
					self._fast_mix(U0 + (U_arr @ (U_arr.mT @ U0)) - U0) + (U_arr @ (U_arr.mT @ torch.linalg.qr(
						self._fast_mix(U0 + (U_arr @ (U_arr.mT @ U0)) - U0)
					).Q)) - (U_arr @ (U_arr.mT @ U0))
				)
			).Q
